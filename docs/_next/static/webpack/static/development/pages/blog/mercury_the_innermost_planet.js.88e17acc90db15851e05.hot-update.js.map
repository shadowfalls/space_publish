{"version":3,"file":"static/webpack/static/development/pages/blog/mercury_the_innermost_planet.js.88e17acc90db15851e05.hot-update.js","sources":["webpack:///./pages/blog/mercury_the_innermost_planet.js"],"sourcesContent":["import React, { useMemo, useEffect, useState, useRef } from 'react';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport { Twitter, Facebook } from 'react-social-sharing';\n\nimport Gist from 'react-gist';\n// import AdSense from 'react-adsense';\n\nimport {\n  // adClientId,\n  domain,\n} from '../../constants/constants';\nimport NavBar from '../../components/NavBar';\nimport { printDate } from '../../services/utils';\nimport RecentArticles from '../../components/RecentArticles';\nimport Footer from '../../components/Footer';\nimport VerticalAd from '../../components/VerticalAd';\nimport useBlogLoader from '../../services/useBlogLoader';\n\n/**\n * This file is used only in development. Any change in this must be manually\n * copied into /pages/blog.js file to apply that in production\n */\nfunction Blogs() {\n  const id = 'mercury_the_innermost_planet';\n  const blogTitle = 'Mercury the innermost planet';\n  const blogDescription = 'Mercury is the closest planet to the sun. It is also the smallest planet in our solar system';\n\n  const {\n    blog,\n    recent,\n  } = useBlogLoader({\n    id,\n  });\n  const shareLinks = useRef(null);\n  const [socialLinks, setSocialLinks] = useState([{\n    provider: 'linkedin',\n    url: `https://www.linkedin.com/sharing/share-offsite/?url=http%3A%2F%2F${domain}`,\n  }]);\n\n  useEffect(() => {\n    /**\n     * Fetching the links to create own social share links\n     */\n    if (shareLinks.current && id && domain) {\n      const blocks = shareLinks.current.querySelectorAll('a');\n      const links = JSON.parse(JSON.stringify(socialLinks));\n      for (let i = 0; i < blocks.length; i += 1) {\n        if (blocks[i].href) {\n          if (blocks[i].href.includes('twitter')) {\n            links.push({\n              provider: 'twitter',\n              url: blocks[i].href,\n            });\n          } else if (blocks[i].href.includes('facebook')) {\n            links.push({\n              provider: 'facebook',\n              url: blocks[i].href,\n            });\n          }\n        }\n      }\n      setSocialLinks(links);\n    }\n  }, [shareLinks, id, domain]); // eslint-disable-line\n\n  const renderBlog = (content) => {\n    if (!content || content.length <= 0) return null;\n\n    const bloger = content.map((line, index) => {\n      if (line.isImage && line.imageUrl) {\n        return (\n          <div key={index} className=\"d-flex justify-content-center image\">\n            <img src={line.imageUrl} alt=\"\" />\n          </div>\n        );\n      }\n\n      if (line.isGist && line.gist) return <Gist key={index} className=\"mt-3 mb-3\" id={line.gist} />;\n\n      if (line.isMainHeading) return <div className=\"main-heading\" key={index} dangerouslySetInnerHTML={{ __html: line.html }} />;\n\n      if (line.isSubHeading) return <div className=\"sub-heading\" key={index} dangerouslySetInnerHTML={{ __html: line.html }} />;\n\n      if (line.isCodeSection) return <div className=\"code-section\" key={index} dangerouslySetInnerHTML={{ __html: line.html }} />;\n\n      if (line.isQuoted) return <div className=\"quote\" key={index} dangerouslySetInnerHTML={{ __html: line.html }} />;\n\n      return <div key={index} dangerouslySetInnerHTML={{ __html: line.html }} />;\n    });\n    return bloger;\n  };\n\n  const onSocialShare = (url) => {\n    if (url) window.open(url, '', 'width=500,height=500');\n  };\n\n  const printBlog = useMemo(() => {\n    return renderBlog(blog.content);\n  }, [blog.content])\n\n  return (\n    <>\n      <NavBar />\n      <Head>\n        <title>{blogTitle}</title>\n        <meta name=\"description\" content={blogDescription} />\n\n        <meta itemProp=\"name\" content={blogTitle} />\n        <meta itemProp=\"description\" content={blogDescription} />\n      </Head>\n      <span className=\"blog-page\">\n        <div className=\"blog-page__container\">\n          {/* <Share urls={shareUrls} /> */}\n          <VerticalAd />\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-12 header-ad\">\n                {/* <AdSense.Google\n                  client={adClientId}\n                  slot=\"3072497734\"\n                  format=\"auto\"\n                  responsive=\"true\"\n                /> */}\n              </div>\n              <div className=\"col-12\">\n                <h1 className=\"heading-text\">\n                  {blogTitle}\n                </h1>\n                <p className=\"lead\">\n                  {printDate(blog.date)}\n                                &nbsp;-&nbsp;\n                  {blog.readTimeMin}\n                  {' '}\n                  mins read\n                </p>\n                <ul className=\"share\">\n                  <li ref={shareLinks} className=\"hide-links\">\n                    <Twitter link={`https://www.${domain}/${id}`} />\n                    <Facebook link={`https://www.${domain}/${id}`} />\n                  </li>\n                  {socialLinks.map((links, index) => (\n                    <li key={index}>\n                      <a\n                        aria-label={links.provider}\n                        style={{ cursor: 'pointer' }}\n                        className=\"mr-5\"\n                        rel=\"noopener noreferrer\"\n                        onClick={() => onSocialShare(links.url)}\n                      >\n                        <i className={`fab fa-${links.provider}`} />\n                      </a>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              <div className=\"contents col-12 col-sm-12 col-md-8 col-xl-8 col-lg-8\">\n                {printBlog ? printBlog : blogDescription}\n              </div>\n              <div className=\"d-none d-sm-none d-md-block d-xl-block d-lg-block\" />\n              <div className=\"col-12\">\n                <hr />\n              </div>\n              <div className=\"col-12\">\n                {/* <AdSense.Google\n                  client={adClientId}\n                  slot=\"9591641415\"\n                  format=\"auto\"\n                  responsive=\"true\"\n                /> */}\n              </div>\n            </div>\n            <div className=\"recent\">\n              You might be interested in:\n            </div>\n            <RecentArticles articles={recent} />\n          </div>\n        </div>\n      </span>\n      <Footer />\n    </>\n  );\n}\n\nBlogs.getInitialProps = async function ({ Component, pageProps }) {\n  return <Component {...pageProps} />;\n};\n\nexport default Blogs;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AAIA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAJA;AASA;AADA;AARA;AAAA;AACA;AAUA;AACA;AAZA;AAaA;AACA;AAFA;AAZA;AAAA;AACA;AAgeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;;;;A","sourceRoot":""}